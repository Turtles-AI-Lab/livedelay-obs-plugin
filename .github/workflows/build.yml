name: Build LiveDelay Plugin

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout plugin code
      uses: actions/checkout@v3
      with:
        path: plugin

    - name: Checkout OBS Studio
      uses: actions/checkout@v3
      with:
        repository: obsproject/obs-studio
        ref: '30.0.0'
        path: obs-studio
        submodules: recursive

    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.0'
        arch: 'win64_msvc2019_64'

    - name: Setup MSVC
      uses: microsoft/setup-msbuild@v1.1

    - name: Download OBS Dependencies
      run: |
        $ErrorActionPreference = "Stop"
        # Use 2023-04-12 - stable version that works
        $depsVersion = "2023-04-12"
        $depsUrl = "https://github.com/obsproject/obs-deps/releases/download/$depsVersion/windows-deps-$depsVersion-x64.zip"
        Write-Host "Downloading OBS deps from: $depsUrl"
        Invoke-WebRequest -Uri $depsUrl -OutFile "obs-deps.zip"
        Expand-Archive -Path "obs-deps.zip" -DestinationPath "${{github.workspace}}/obs-deps"
        Write-Host "OBS deps extracted successfully"
      shell: pwsh

    - name: Configure OBS Studio
      run: |
        cd obs-studio
        mkdir build
        cd build
        $env:CMAKE_PREFIX_PATH = "${{github.workspace}}/obs-deps"
        # Add legacy stdio aliases for zlib MinGW compatibility
        cmake -G "Visual Studio 17 2022" -A x64 `
          -DCMAKE_PREFIX_PATH="${{github.workspace}}/obs-deps" `
          -DENABLE_BROWSER=OFF `
          -DENABLE_WEBSOCKET=OFF `
          -DENABLE_QSV11=OFF `
          -DENABLE_PLUGINS=OFF `
          -DCMAKE_SHARED_LINKER_FLAGS="/FORCE:MULTIPLE" `
          ..
      shell: pwsh

    - name: Create legacy stdio stub
      run: |
        # Compile the stub to provide missing __ms_vsnprintf symbol
        cl.exe /c /O2 "${{github.workspace}}/plugin/legacy-stdio-stub.c" /Fo"${{github.workspace}}/legacy-stdio-stub.obj"
      shell: pwsh

    - name: Build OBS Studio
      run: |
        cd obs-studio/build
        # Add stub object to linker flags
        $env:LDFLAGS = "${{github.workspace}}/legacy-stdio-stub.obj"
        cmake --build . --config RelWithDebInfo --target libobs -- /p:AdditionalDependencies="${{github.workspace}}/legacy-stdio-stub.obj"
        cmake --build . --config RelWithDebInfo --target obs-frontend-api

    - name: Configure LiveDelay Plugin
      run: |
        cd plugin
        mkdir build
        cd build
        $env:CMAKE_PREFIX_PATH = "${{github.workspace}}/obs-deps;${{github.workspace}}/obs-studio/build"
        cmake -G "Visual Studio 17 2022" -A x64 -DCMAKE_PREFIX_PATH="${{github.workspace}}/obs-deps;${{github.workspace}}/obs-studio/build" -DOBS_SOURCE_DIR="${{github.workspace}}/obs-studio" ..
      shell: pwsh

    - name: Build LiveDelay Plugin
      run: |
        cd plugin/build
        cmake --build . --config RelWithDebInfo

    - name: Package Plugin
      run: |
        mkdir release
        copy plugin\build\RelWithDebInfo\livedelay.dll release\
        copy plugin\data\locale\en-US.ini release\

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: livedelay-windows
        path: release/

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: LiveDelay v1.0.${{ github.run_number }}
        files: release/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
